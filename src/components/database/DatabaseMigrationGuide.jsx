import React from 'react';
import ReactMarkdown from 'react-markdown';

const markdownContent = `
# Руководство по миграции и синхронизации БД

Это руководство объясняет, как поддерживать вашу базу данных Supabase в синхронизации с приложением.

## 1. Когда нужна синхронизация?

Синхронизация требуется каждый раз, когда вносятся изменения в файлы \`entities/*.json\` или когда появляется новая версия SQL-скрипта для обновления структуры.

## 2. Как выполнить синхронизацию?

Для синхронизации используется SQL-скрипт, который находится в файле \`components/database/DatabaseSync.js\`.

**Шаги:**

1.  **Скопируйте SQL-код:** Откройте файл \`components/database/DatabaseSync.js\` и скопируйте всё содержимое строки \`databaseSyncSQL\` (весь текст внутри обратных кавычек).
2.  **Перейдите в Supabase:** Откройте вашу панель управления проектом Supabase.
3.  **Откройте SQL Editor:** В меню слева выберите иконку с изображением базы данных, а затем "SQL Editor".
4.  **Вставьте и выполните:** Вставьте скопированный SQL-код в окно нового запроса и нажмите кнопку "Run".

Скрипт спроектирован так, чтобы быть безопасным для повторного выполнения (идемпотентным). Он не удалит ваши данные, а только обновит структуру таблиц.

## 3. Устранение неполадок

*   **Ошибки прав доступа:** Убедитесь, что вы выполняете скрипт с ролью, имеющей достаточные права (обычно это роль \`postgres\`).
*   **Конфликты данных:** Если у вас возникают ошибки, связанные с несовместимостью типов данных, возможно, вам придется вручную скорректировать данные перед выполнением миграции.
`;

const DatabaseMigrationGuide = () => {
  return (
    <div className="prose dark:prose-invert max-w-4xl mx-auto p-8 bg-white dark:bg-gray-900 rounded-lg shadow-md">
      <ReactMarkdown>{markdownContent}</ReactMarkdown>
    </div>
  );
};

export default DatabaseMigrationGuide;
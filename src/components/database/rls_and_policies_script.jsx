import React from 'react';
import { Button } from '@/components/ui/button';
import { toast } from 'sonner';

export default function RLSPoliciesScript() {
  const migrationScript = `
-- =================================================================
-- KASBOOK RLS MIGRATION: SECURITY DEFINER + AUTH.UID() FIX
-- =================================================================

-- –®–∞–≥ 1: –î–æ–±–∞–≤–ª—è–µ–º author_id –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
ALTER TABLE public.books ADD COLUMN IF NOT EXISTS author_id uuid REFERENCES public.users(id);

-- –®–∞–≥ 2: –ú–∏–≥—Ä–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
UPDATE public.books SET author_id = (
  SELECT id FROM public.users WHERE email = author_email
) WHERE author_id IS NULL;

-- –®–∞–≥ 3: –°–æ–∑–¥–∞–µ–º SECURITY DEFINER —Ñ—É–Ω–∫—Ü–∏—é (–æ–±—Ö–æ–¥–∏—Ç RLS —Ä–µ–∫—É—Ä—Å–∏—é)
CREATE OR REPLACE FUNCTION public.is_moderator()
RETURNS boolean
LANGUAGE sql
SECURITY DEFINER
AS $$
  SELECT EXISTS (
    SELECT 1 FROM public.users 
    WHERE id = auth.uid() AND role IN ('admin', 'moderator')
  );
$$;

-- –®–∞–≥ 4: –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è books
DO $$ 
DECLARE
    policy_record RECORD;
BEGIN
    FOR policy_record IN 
        SELECT policyname FROM pg_policies 
        WHERE tablename = 'books' AND schemaname = 'public'
    LOOP
        EXECUTE 'DROP POLICY IF EXISTS "' || policy_record.policyname || '" ON public.books';
    END LOOP;
END $$;

-- –®–∞–≥ 5: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ —Å auth.uid()
CREATE POLICY "Authors insert" ON public.books 
FOR INSERT WITH CHECK (auth.uid() = author_id);

CREATE POLICY "Public read approved" ON public.books 
FOR SELECT USING (status = 'approved');

CREATE POLICY "Authors update own" ON public.books 
FOR UPDATE USING (author_id = auth.uid()) WITH CHECK (true);

CREATE POLICY "Authors delete own" ON public.books 
FOR DELETE USING (author_id = auth.uid());

CREATE POLICY "Moderators all" ON public.books 
FOR ALL USING (is_moderator()) WITH CHECK (true);

-- –®–∞–≥ 6: –í–∫–ª—é—á–∞–µ–º RLS –∏ —Å–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
ALTER TABLE public.books ENABLE ROW LEVEL SECURITY;
CREATE INDEX IF NOT EXISTS idx_books_author_id ON public.books(author_id);
CREATE INDEX IF NOT EXISTS idx_books_status ON public.books(status);

-- –®–∞–≥ 7: –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è purchases
DO $$ 
DECLARE policy_record RECORD;
BEGIN
    FOR policy_record IN 
        SELECT policyname FROM pg_policies 
        WHERE tablename = 'purchases' AND schemaname = 'public'
    LOOP
        EXECUTE 'DROP POLICY IF EXISTS "' || policy_record.policyname || '" ON public.purchases';
    END LOOP;
END $$;

CREATE POLICY "Users own purchases" ON public.purchases 
FOR ALL USING (auth.email() = buyer_email OR is_moderator());

ALTER TABLE public.purchases ENABLE ROW LEVEL SECURITY;

-- –®–∞–≥ 8: Reviews
DO $$ 
DECLARE policy_record RECORD;
BEGIN
    FOR policy_record IN 
        SELECT policyname FROM pg_policies 
        WHERE tablename = 'reviews' AND schemaname = 'public'
    LOOP
        EXECUTE 'DROP POLICY IF EXISTS "' || policy_record.policyname || '" ON public.reviews';
    END LOOP;
END $$;

CREATE POLICY "Reviews public read" ON public.reviews 
FOR SELECT USING (status = 'approved');

CREATE POLICY "Users own reviews" ON public.reviews 
FOR ALL USING (auth.email() = reviewer_email OR is_moderator());

ALTER TABLE public.reviews ENABLE ROW LEVEL SECURITY;

SELECT 'KASBOOK RLS migration completed successfully!' as result;
  `;

  const handleCopyToClipboard = () => {
    navigator.clipboard.writeText(migrationScript).then(() => {
      toast.success('üéâ SQL —Å–∫—Ä–∏–ø—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!', {
        description: '–¢–µ–ø–µ—Ä—å –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ Supabase SQL Editor –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ.'
      });
    }).catch(err => {
      console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç');
    });
  };

  return (
    <div className="p-6 max-w-4xl mx-auto">
      <div className="bg-card rounded-lg border p-6">
        <h2 className="text-2xl font-bold mb-4 flex items-center gap-2">
          üîí –ú–∏–≥—Ä–∞—Ü–∏—è RLS –ü–æ–ª–∏—Ç–∏–∫
        </h2>
        
        <div className="space-y-4 text-sm">
          <div className="p-4 bg-green-50 border border-green-200 rounded-lg">
            <h3 className="font-semibold mb-2 text-green-800">‚úÖ –ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:</h3>
            <ul className="list-disc list-inside space-y-1 text-green-700">
              <li><strong>403 Unauthorized:</strong> –î–æ–±–∞–≤–ª—è–µ—Ç author_id –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ auth.uid()</li>
              <li><strong>Infinite Recursion:</strong> SECURITY DEFINER —Ñ—É–Ω–∫—Ü–∏—è is_moderator()</li>
              <li><strong>RLS –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</strong> –ü–æ–ª–∏—Ç–∏–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
              <li><strong>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</strong> –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤</li>
            </ul>
          </div>
          
          <div className="p-4 bg-amber-50 border border-amber-200 rounded-lg">
            <p className="font-semibold text-amber-800">‚ö†Ô∏è –ü–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º:</p>
            <ol className="list-decimal list-inside text-amber-700 mt-2 space-y-1">
              <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ `users` –∏–º–µ–µ—Ç –ø–æ–ª–µ `id` (UUID)</li>
              <li>–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: <code className="bg-amber-100 px-1 rounded">npm install</code></li>
              <li>–ó–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –≤ Supabase SQL Editor</li>
            </ol>
          </div>
        </div>

        <div className="mt-6 space-y-3">
          <Button onClick={handleCopyToClipboard} className="w-full">
            üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å SQL —Å–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏
          </Button>
          
          <div className="text-xs text-muted-foreground text-center">
            –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
          </div>
        </div>
      </div>
    </div>
  );
}